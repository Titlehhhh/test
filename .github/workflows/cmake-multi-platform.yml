name: Build and deploy C++ library

on: [push]

jobs:
  build-and-deploy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        arch: [i386, x86_64, arm64, aarch64]
        include:
          - os: windows-latest
            arch: i386
            nameOs: Windows
            fileName: "libdeflate.dll"
            FEATURES: ["zmm", "avx512_vnni", "avx512vl", "avx_vnni", "vpclmulqdq", "avx2", "avx", "bmi2", "pclmulqdq", "sse2"]
          - os: windows-latest
            arch: x86_64
            nameOs: Windows
            fileName: "libdeflate.dll"
            FEATURES: ["zmm", "avx512_vnni", "avx512vl", "avx_vnni", "vpclmulqdq", "avx2", "avx", "bmi2", "pclmulqdq", "sse2"]
          - os: ubuntu-latest
            arch: arm64
            nameOs: ubuntu-20.04
            fileName: "libdeflate.so"
            FEATURES: ["dotprod", "sha3", "prefer_pmull", "crc32", "pmull", "neon"]
          - os: ubuntu-latest
            arch: aarch64
            nameOs: ubuntu-20.04
            fileName: "libdeflate.so"
            FEATURES: ["dotprod", "sha3", "prefer_pmull", "crc32", "pmull", "neon"]
          - os: macos-latest
            arch: arm64
            nameOs: macos-10.15
            fileName: "libdeflate.dylib"
            FEATURES: ["dotprod", "sha3", "prefer_pmull", "crc32", "pmull", "neon"]
          - os: macos-latest
            arch: x86_64
            nameOs: macos-10.15
            fileName: "libdeflate.dylib"
            FEATURES: ["zmm", "avx512_vnni", "avx512vl", "avx_vnni", "vpclmulqdq", "avx2", "avx", "bmi2", "pclmulqdq", "sse2"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: clang-18
          vcvarsall: ${{ contains(matrix.os, 'windows') }}
          cmake: true
          ninja: true
          vcpkg: false
          cppcheck: false
          clang-tidy: false

      - name: Build
        run: |
          mkdir build         
          
          cmake -S . -B build -DCMAKE_SYSTEM_NAME=${{matrix.os}} -DCMAKE_SYSTEM_PROCESSOR=${{matrix.arch}} -DFEATURES=${FEATURES[*]}
          cmake --build build
      

      - name: Upload artifact
        uses: actions/upload-artifact@v4.4.0
        with:
          name: library-${{matrix.os}}-${{matrix.arch}}
          path: build/${{matrix.fileName}}