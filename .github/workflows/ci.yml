name: CI
on: [push]

jobs:
  x86_64-build-and-test:
    name: Build and test (x86_64, clang, Ubuntu)

    runs-on: ubuntu-22.04
    env:
      CC: clang
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang llvm libz-dev valgrind
    - run: sudo sysctl kernel.randomize_va_space=0
    - run: cmake -S . -B ./build
    - run: cmake --build build --verbose --config Release
    - run: sudo cmake --install build --verbose --config Release

  other-arch-build-and-test:
    name: Build and test (${{ matrix.arch }}, ${{ matrix.distro }}, ${{ matrix.compiler }})
    strategy:
      matrix:
        include:
        - { arch: armv6, distro: bullseye, compiler: clang }
        - { arch: armv7, distro: bullseye, compiler: clang }
        - { arch: aarch64, distro: bullseye, compiler: clang }
        - { arch: s390x, distro: bullseye, compiler: clang }
        - { arch: ppc64le, distro: bullseye, compiler: clang }
        - { arch: riscv64, distro: ubuntu_latest, compiler: clang }
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v2.7.2
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y build-essential cmake clang llvm libz-dev
          run: |
            cmake -S . -B ./build
            cmake --build build --verbose --config Release
            cmake --install build --verbose --config Release
      - run: ls ./build

  macos-build-and-test:
    name: Build and test (macOS)
    runs-on: macos-latest
    env:
      CFLAGS: -Werror -DLIBDEFLATE_ENABLE_ASSERTIONS
    steps:
    - uses: actions/checkout@v4
    - run: cmake -B build -DLIBDEFLATE_BUILD_TESTS=1
    - run: cmake --build build --verbose
    - run: DESTDIR=build/install cmake --install build --verbose


  windows-visualstudio-build-and-test:
    name: Build windows arm64
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Configure build for ARM64
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: amd64_arm64
    - run: mkdir build
    - run: cmake -S . -B ./build -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang
    - run: cmake --build build --verbose --config Release
    - run: cmake --install build --verbose --config Release